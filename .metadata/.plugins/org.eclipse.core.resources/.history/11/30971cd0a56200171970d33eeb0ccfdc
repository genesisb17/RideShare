package com.revature.rideshare.data.jpa.domain;

import java.io.Serializable;
import java.sql.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name="AVAILABLE_RIDES")
public class AvailableRide implements Serializable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -5753230302496991697L;

	@Id
	@Column(name="AVAILABLE_RIDE_ID")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "AR_ID_SEQUENCE")
	@SequenceGenerator(name="AR_ID_SEQUENCE", sequenceName="AR_ID_SEQUENCE")
	private long availRideId;
	
	@OneToMany(mappedBy = "car", fetch = FetchType.EAGER, cascade = CascadeType.REMOVE )
	@Column(name="CAR_ID")
	private Car car;
	
	@OneToMany(mappedBy="pointofinterest", fetch = FetchType.EAGER, cascade = CascadeType.REMOVE )
	@Column(name="PICKUP_ID")
	private PointOfInterest pickupPOI;
	
	@OneToMany(mappedBy="pointofinterest", fetch = FetchType.EAGER, cascade = CascadeType.REMOVE )
	@Column(name="DROPOFF_ID")
	private PointOfInterest dropoffPOI;
	
	@Column(name="AVAILABLE_SEATS")
	private short seatsAvailable;
	
	@Temporal(TemporalType.DATE)
	@Column(name="TIME")
	private Date time;
	
	@Column(name="NOTES")
	private String notes;
	

}
